// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using funAPI.Data;

namespace funAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("funAPI.Models.Names", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateBooked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateGenerated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Names");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBooked = new DateTime(2021, 7, 27, 6, 52, 45, 717, DateTimeKind.Utc).AddTicks(7944),
                            DateGenerated = new DateTime(2021, 7, 20, 16, 23, 40, 0, DateTimeKind.Unspecified),
                            IsBooked = false,
                            Name = "Tsitsi"
                        },
                        new
                        {
                            Id = 2,
                            DateBooked = new DateTime(2021, 7, 21, 9, 24, 40, 0, DateTimeKind.Unspecified),
                            DateGenerated = new DateTime(2021, 7, 20, 9, 24, 40, 0, DateTimeKind.Unspecified),
                            IsBooked = true,
                            Name = "Anorld"
                        },
                        new
                        {
                            Id = 3,
                            DateBooked = new DateTime(2021, 7, 27, 6, 52, 45, 718, DateTimeKind.Utc).AddTicks(2883),
                            DateGenerated = new DateTime(2021, 7, 20, 9, 24, 40, 0, DateTimeKind.Unspecified),
                            IsBooked = false,
                            Name = "Abjksabdflksdkfbiugbausdigbkjsdbgfui"
                        },
                        new
                        {
                            Id = 4,
                            DateBooked = new DateTime(2021, 7, 27, 6, 52, 45, 718, DateTimeKind.Utc).AddTicks(2890),
                            DateGenerated = new DateTime(2021, 7, 26, 9, 24, 40, 0, DateTimeKind.Unspecified),
                            IsBooked = false,
                            Name = "Panashe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
